{"remainingRequest":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/src/components/Reply.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/src/components/Reply.vue","mtime":1666926022000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFbW9qaSBmcm9tICIuL0Vtb2ppIjsKaW1wb3J0IEVtb2ppTGlzdCBmcm9tICIuLi9hc3NldHMvanMvZW1vamkiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRW1vamkKICB9LAogIHByb3BzOiB7CiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IE51bWJlcgogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBpbmRleDogMCwKICAgICAgY2hvb3NlRW1vamk6IGZhbHNlLAogICAgICBuaWNrbmFtZTogIiIsCiAgICAgIHJlcGx5VXNlcklkOiBudWxsLAogICAgICBwYXJlbnRJZDogbnVsbCwKICAgICAgY29tbWVudENvbnRlbnQ6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY2FuY2xlUmVwbHkoKSB7CiAgICAgIHRoaXMuJHJlZnMucmVwbHkuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIH0sCiAgICBpbnNlcnRSZXBseSgpIHsKICAgICAgLy/liKTmlq3nmbvlvZUKICAgICAgaWYgKCF0aGlzLiRzdG9yZS5zdGF0ZS51c2VySWQpIHsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpbkZsYWcgPSB0cnVlOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICBpZiAodGhpcy5jb21tZW50Q29udGVudC50cmltKCkgPT0gIiIpIHsKICAgICAgICB0aGlzLiR0b2FzdCh7IHR5cGU6ICJlcnJvciIsIG1lc3NhZ2U6ICLlm57lpI3kuI3og73kuLrnqboiIH0pOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICAvL+ino+aekOihqOaDhQogICAgICB2YXIgcmVnID0gL1xbLis/XF0vZzsKICAgICAgdGhpcy5jb21tZW50Q29udGVudCA9IHRoaXMuY29tbWVudENvbnRlbnQucmVwbGFjZShyZWcsIGZ1bmN0aW9uKHN0cikgewogICAgICAgIHJldHVybiAoCiAgICAgICAgICAiPGltZyBzcmM9ICciICsKICAgICAgICAgIEVtb2ppTGlzdFtzdHJdICsKICAgICAgICAgICInIHdpZHRoPScyNCdoZWlnaHQ9JzI0JyBzdHlsZT0nbWFyZ2luOiAwIDFweDt2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b20nLz4iCiAgICAgICAgKTsKICAgICAgfSk7CiAgICAgIGNvbnN0IHBhdGggPSB0aGlzLiRyb3V0ZS5wYXRoOwogICAgICBjb25zdCBhcnIgPSBwYXRoLnNwbGl0KCIvIik7CiAgICAgIHZhciBjb21tZW50ID0gewogICAgICAgIHR5cGU6IHRoaXMudHlwZSwKICAgICAgICByZXBseVVzZXJJZDogdGhpcy5yZXBseVVzZXJJZCwKICAgICAgICBwYXJlbnRJZDogdGhpcy5wYXJlbnRJZCwKICAgICAgICBjb21tZW50Q29udGVudDogdGhpcy5jb21tZW50Q29udGVudAogICAgICB9OwogICAgICBzd2l0Y2ggKHRoaXMudHlwZSkgewogICAgICAgIGNhc2UgMToKICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjb21tZW50LnRvcGljSWQgPSBhcnJbMl07CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgdGhpcy5jb21tZW50Q29udGVudCA9ICIiOwogICAgICB0aGlzLmF4aW9zLnBvc3QoIi9hcGkvY29tbWVudHMiLCBjb21tZW50KS50aGVuKCh7IGRhdGEgfSkgPT4gewogICAgICAgIGlmIChkYXRhLmZsYWcpIHsKICAgICAgICAgIHRoaXMuJGVtaXQoInJlbG9hZFJlcGx5IiwgdGhpcy5pbmRleCk7CiAgICAgICAgICB0aGlzLiR0b2FzdCh7IHR5cGU6ICJzdWNjZXNzIiwgbWVzc2FnZTogIuWbnuWkjeaIkOWKnyIgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJHRvYXN0KHsgdHlwZTogImVycm9yIiwgbWVzc2FnZTogZGF0YS5tZXNzYWdlIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgYWRkRW1vamkodGV4dCkgewogICAgICB0aGlzLmNvbW1lbnRDb250ZW50ICs9IHRleHQ7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Reply.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reply.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"reply-input-wrapper\" style=\"display: none\" ref=\"reply\">\n    <textarea\n      class=\"comment-textarea\"\n      :placeholder=\"'回复 @' + nickname + '：'\"\n      auto-grow\n      dense\n      v-model=\"commentContent\"\n    />\n    <div class=\"emoji-container\">\n      <span\n        :class=\"chooseEmoji ? 'emoji-btn-active' : 'emoji-btn'\"\n        @click=\"chooseEmoji = !chooseEmoji\"\n      >\n        <i class=\"iconfont iconbiaoqing\" />\n      </span>\n      <div style=\"margin-left:auto\">\n        <button @click=\"cancleReply\" class=\"cancle-btn v-comment-btn\">\n          取消\n        </button>\n        <button @click=\"insertReply\" class=\"upload-btn v-comment-btn\">\n          提交\n        </button>\n      </div>\n    </div>\n    <!-- 表情框 -->\n    <emoji @addEmoji=\"addEmoji\" :chooseEmoji=\"chooseEmoji\" />\n  </div>\n</template>\n\n<script>\nimport Emoji from \"./Emoji\";\nimport EmojiList from \"../assets/js/emoji\";\nexport default {\n  components: {\n    Emoji\n  },\n  props: {\n    type: {\n      type: Number\n    }\n  },\n  data: function() {\n    return {\n      index: 0,\n      chooseEmoji: false,\n      nickname: \"\",\n      replyUserId: null,\n      parentId: null,\n      commentContent: \"\"\n    };\n  },\n  methods: {\n    cancleReply() {\n      this.$refs.reply.style.display = \"none\";\n    },\n    insertReply() {\n      //判断登录\n      if (!this.$store.state.userId) {\n        this.$store.state.loginFlag = true;\n        return false;\n      }\n      if (this.commentContent.trim() == \"\") {\n        this.$toast({ type: \"error\", message: \"回复不能为空\" });\n        return false;\n      }\n      //解析表情\n      var reg = /\\[.+?\\]/g;\n      this.commentContent = this.commentContent.replace(reg, function(str) {\n        return (\n          \"<img src= '\" +\n          EmojiList[str] +\n          \"' width='24'height='24' style='margin: 0 1px;vertical-align: text-bottom'/>\"\n        );\n      });\n      const path = this.$route.path;\n      const arr = path.split(\"/\");\n      var comment = {\n        type: this.type,\n        replyUserId: this.replyUserId,\n        parentId: this.parentId,\n        commentContent: this.commentContent\n      };\n      switch (this.type) {\n        case 1:\n        case 3:\n          comment.topicId = arr[2];\n          break;\n        default:\n          break;\n      }\n      this.commentContent = \"\";\n      this.axios.post(\"/api/comments\", comment).then(({ data }) => {\n        if (data.flag) {\n          this.$emit(\"reloadReply\", this.index);\n          this.$toast({ type: \"success\", message: \"回复成功\" });\n        } else {\n          this.$toast({ type: \"error\", message: data.message });\n        }\n      });\n    },\n    addEmoji(text) {\n      this.commentContent += text;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.reply-input-wrapper {\n  border: 1px solid #90939950;\n  border-radius: 4px;\n  padding: 10px;\n  margin: 0 0 10px;\n}\n</style>\n"]}]}