{"remainingRequest":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/src/components/zw-player/player.vue?vue&type=style&index=0&id=051e8062&scoped=true&lang=css&","dependencies":[{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/src/components/zw-player/player.vue","mtime":1666926022000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/css-loader/dist/cjs.js","mtime":1670984987530},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670984980196},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/postcss-loader/src/index.js","mtime":1670984984011},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/cache-loader/dist/cjs.js","mtime":1670984987973},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vue-loader/lib/index.js","mtime":1670984980185}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgdXJsKCIuL3BsYXllci5jc3MiKTsKQGltcG9ydCB1cmwoIi4vcGxheWVybW9iaWxlLmNzcyIpOwo="},{"version":3,"sources":["player.vue"],"names":[],"mappingssoBA;AACA","file":"player.vue","sourceRoot":"src/components/zw-player","sourcesContent":["<template>\n  <div>\n    <transition name=\"dis_list\">\n      <div class=\"list_box\" v-if=\"listIsDis\">\n        <transition name=\"music_alert\">\n          <span class=\"music_alert\" v-if=\"musicAlertState\">{{\n            musicAlertVal\n          }}</span>\n        </transition>\n        <div class=\"list_close\" @click=\"DisList\">x</div>\n        <div class=\"music_list\">\n          <div class=\"list_l\">\n            <ul class=\"music_type\">\n              <li\n                v-for=\"(item, index) in musicTypeList\"\n                :key=\"index\"\n                @click=\"_getMusicType(item.id)\"\n                :class=\"{ type_active: item.id == thisMusicType }\"\n              >\n                {{ item.name }}\n              </li>\n            </ul>\n            <div class=\"list_title\">\n              <span style=\"font-size: 14px;\">歌曲列表</span>\n              <img\n                :src=\"musicStateButton\"\n                alt=\"\"\n                class=\"music_state\"\n                @click=\"MusicStateChange\"\n              />\n              <div class=\"music_search_box\">\n                <input\n                  type=\"text\"\n                  class=\"music_search\"\n                  v-model=\"musicSearchVal\"\n                  placeholder=\"搜索歌曲\"\n                />\n                <transition name=\"music_search\">\n                  <ul class=\"search_list\" v-if=\"musicSearchVal != ''\">\n                    <li\n                      v-for=\"(item, index) in musicSearchList\"\n                      :key=\"index\"\n                      @click=\"ListAdd(item)\"\n                    >\n                      <span class=\"music_search_name\">{{ item.name }}</span>\n                      <span class=\"music_search_ar\">{{\n                        item.artists[0].name\n                      }}</span>\n                    </li>\n                  </ul>\n                </transition>\n              </div>\n            </div>\n            <div class=\"music_ul_title\">\n              <span>歌曲</span><span>歌手</span><span>专辑</span>\n            </div>\n            <ul class=\"list\">\n              <li\n                v-for=\"(item, index) in thisMusicList\"\n                :key=\"index\"\n                @mouseover=\"ButtonActive(index)\"\n                @dblclick=\"ListPlay((thisListPage - 1) * 10 + index)\"\n              >\n                <div\n                  class=\"this_music_shlter\"\n                  v-if=\"(thisListPage - 1) * 10 + index == thisMusicIndex\"\n                ></div>\n                <span>{{ item.name }}</span\n                ><span>{{ item.ar[0].name }}</span\n                ><span>{{ item.al.name }}</span>\n                <transition name=\"list_button\">\n                  <div\n                    class=\"music_button\"\n                    v-if=\"listButtonActiveIndex == index\"\n                  >\n                    <div\n                      class=\"list_play\"\n                      title=\"播放这首歌\"\n                      :style=\"{ backgroundImage: 'url(' + listPlay + ')' }\"\n                      @click=\"ListPlay((thisListPage - 1) * 10 + index)\"\n                    ></div>\n                    <div\n                      class=\"list_play\"\n                      title=\"添加到 My Songs\"\n                      :style=\"{ backgroundImage: 'url(' + add + ')' }\"\n                      @click=\"ListAdd(item)\"\n                      v-if=\"thisMusicType != -1\"\n                    ></div>\n                  </div>\n                </transition>\n              </li>\n            </ul>\n            <div class=\"list_page\">\n              <div\n                class=\"page_last\"\n                v-if=\"thisListPage != 1\"\n                @click=\"ListChange(true)\"\n              >\n                &lt;\n              </div>\n              <div\n                class=\"page_next\"\n                v-if=\"thisListPage != Math.ceil(musicList.length / 10)\"\n                @click=\"ListChange(false)\"\n              >\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"list_r\">\n            <img class=\"music_list_bg\" :src=\"musicImg\" />\n            <div\n              class=\"music_list_shlter\"\n              :style=\"{ backgroundImage: 'url(' + shlter + ')' }\"\n            ></div>\n            <ul class=\"music_talk_list\">\n              <li v-for=\"(item, index) in hotTalkList\" :key=\"index\">\n                <div class=\"talk_head\">\n                  <img\n                    :src=\"item.user.avatarUrl\"\n                    alt=\"\"\n                    class=\"talk_head_img\"\n                  />\n                  <span class=\"talk_head_name\">{{ item.user.nickname }}</span>\n                </div>\n                <p class=\"talk_content\">\n                  <img class=\"talk_icon_l\" :src=\"talkicon1\" />\n                  {{ item.content }}\n                  <img class=\"talk_icon_r\" :src=\"talkicon2\" />\n                </p>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </transition>\n    <div class=\"bbox\" :class=\"{ bbox_active: disActive }\">\n      <div\n        class=\"pan\"\n        :style=\"{ backgroundImage: 'url(' + pan + ')' }\"\n        :class=\"{ pan_active: disActive }\"\n        @click=\"DisActive\"\n      >\n        <img :src=\"musicImg\" alt=\"\" class=\"pan_c\" />\n      </div>\n      <div\n        class=\"box\"\n        :style=\"{ backgroundImage: 'url(' + musicImg + ')' }\"\n        :class=\"{ box_active: disActive }\"\n        @dblclick=\"DisList\"\n      >\n        <div\n          class=\"music_shlter_2\"\n          :style=\"{ backgroundImage: 'url(' + musicImg + ')' }\"\n          :class=\"{ shlter_active: disActive }\"\n        ></div>\n        <div\n          class=\"music_shlter\"\n          :style=\"{ backgroundImage: 'url(' + musicImg + ')' }\"\n          :class=\"{ shlter_active: disActive }\"\n        ></div>\n        <div class=\"music_shlter_3\"></div>\n        <div class=\"music_dis\">\n          <div class=\"dis_list\" @click=\"DisList\">···</div>\n          <p class=\"music_title\">{{ musicTitle }}</p>\n          <p class=\"music_intro\">歌手: {{ musicName }}</p>\n          <ul class=\"music_words\">\n            <div class=\"music_words_box\" :style=\"{ top: wordsTop + 'px' }\">\n              <li\n                v-for=\"(item, index) in musicWords\"\n                :key=\"index\"\n                class=\"music_word\"\n                :class=\"{ word_highlight: wordIndex == index }\"\n              >\n                {{ item }}\n              </li>\n            </div>\n          </ul>\n        </div>\n        <div class=\"control_box\">\n          <div class=\"control_button\">\n            <img :src=\"playIcon\" alt=\"\" class=\"control_icon\" />\n          </div>\n          <div class=\"progress\">\n            <div class=\"progress_c\" :style=\"{ width: currentProgress }\">\n              <div class=\"progress_circle\">\n                <div class=\"progress_circle_c\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <video\n        id=\"music\"\n        autoplay=\"autoplay\"\n        :src=\"musicUrl\"\n        name=\"media\"\n      ></video>\n    </div>\n  </div>\n</template>\n<script>\nimport {\n  getWords,\n  getMusicInfo,\n  getMusicUrl,\n  getHotMusic,\n  getSearchSuggest,\n  getHotTalk\n} from \"./api/music\";\nimport pan from \"./img/pan.png\";\nimport play from \"./img/play.png\";\nimport pause from \"./img/pause.png\";\nimport add from \"./img/add.png\";\nimport shlter from \"./img/list_pan.png\";\nimport listPlay from \"./img/list_play_hover.png\";\nimport state0 from \"./img/state_0.png\";\nimport state1 from \"./img/state_1.png\";\nimport talkicon1 from \"./img/talkicon1.png\";\nimport talkicon2 from \"./img/talkicon2.png\";\nimport $ from \"jquery\";\nexport default {\n  name: \"Player\",\n  data() {\n    return {\n      o: 0,\n      top: 0,\n      pan,\n      play,\n      pause,\n      add,\n      shlter,\n      listPlay,\n      state0,\n      state1,\n      talkicon1,\n      talkicon2,\n      playState: true,\n      playIcon: pause,\n      musicImg: \"\",\n      musicUrl: \"\",\n      musicWords: [],\n      musicTitle: \"\",\n      musicName: \"\",\n      wordsTime: [],\n      wordsTop: 0,\n      wordIndex: 0,\n      currentProgress: \"0%\",\n      musicList: [],\n      myMusicList: [], //存储在本地   可以开始判断有没有 让用户一开始就听这个列表\n      thisMusicIndex: 1,\n      disActive: false,\n      listIsDis: false,\n      listButtonActiveIndex: -1,\n      thisListPage: 1,\n      musicTypeList: [\n        { name: \"热歌榜\", id: 3778678 },\n        { name: \"新歌榜\", id: 3779629 },\n        { name: \"飙升榜\", id: 19723756 },\n        { name: \"嘻哈榜\", id: 991319590 },\n        { name: \"My Songs\", id: -1 }\n      ],\n      thisMusicType: -1,\n      notPlay: [],\n      musicState: 0, //0列表循环  1单曲循环\n      musicStateButton: state1,\n      musicSearchVal: \"\",\n      musicSearchList: [],\n      musicAlertVal: \"\",\n      musicAlertState: false,\n      musicAlertTimer: \"\",\n      //新增歌词评论\n      hotTalkList: []\n    };\n  },\n  mounted() {\n    this.Player();\n  },\n  created() {\n    this._getMusicType(3779629);\n    this.DisAuthorInfo(); //禁删~感谢配合\n  },\n  computed: {\n    thisMusicList() {\n      return [...this.musicList].splice((this.thisListPage - 1) * 10, 10); //分页\n    }\n  },\n  watch: {\n    musicSearchVal() {\n      if (this.musicSearchVal == \"\") {\n        this.musicSearchList = [];\n      } else {\n        getSearchSuggest(this.musicSearchVal).then(res => {\n          if (res.data.result.songs == undefined) {\n            this.musicSearchList = [];\n          } else {\n            this.musicSearchList = res.data.result.songs;\n          }\n        });\n      }\n    }\n  },\n  methods: {\n    //禁删~感谢配合\n    DisAuthorInfo() {\n      console.log(\n        \"%c音乐播放器作者----仲威，博客地址：https://blogme.top\",\n        \"background-color:rgb(30,30,30);border-radius:4px;font-size:12px;padding:4px;color:rgb(220,208,129);\"\n      );\n    },\n    MusicAlert(val) {\n      this.musicAlertState = true;\n      this.musicAlertVal = val;\n      clearTimeout(this.musicAlertTimer);\n      this.musicAlertTimer = setTimeout(() => {\n        this.musicAlertState = false;\n        this.musicAlertVal = \"\";\n      }, 2000);\n    },\n    ListAdd(obj) {\n      getMusicInfo(obj.id).then(res => {\n        this.musicSearchVal = \"\";\n        if (this.myMusicList.length == 0) {\n          this.myMusicList = [res.data.songs[0]];\n          this._getMusicType(-1);\n          //第一次搜索直接播放\n        } else {\n          this.myMusicList.push(res.data.songs[0]);\n          //提示已经添加进去\n        }\n        this.MusicAlert(\"添加成功\");\n      });\n    },\n    MusicStateChange() {\n      if (this.musicState == 0) {\n        this.musicState = 1;\n        this.musicStateButton = this.state0;\n        this.MusicAlert(\"已切换为单曲循环模式\");\n      } else {\n        this.musicState = 0;\n        this.musicStateButton = this.state1;\n        this.MusicAlert(\"已切换为列表循环模式\");\n      }\n    },\n    DisList() {\n      this.listIsDis = this.listIsDis ? false : true;\n    },\n    ListChange(isLast) {\n      if (isLast) {\n        this.thisListPage--;\n      } else {\n        this.thisListPage++;\n      }\n    },\n    ListPlay(id) {\n      if (this.thisMusicIndex != id) {\n        this.thisMusicIndex = id > this.musicList.length - 1 ? 0 : id;\n        this._getInfo();\n        this.top = 0;\n        this.o = 0;\n        this.wordIndex = 0;\n        this.wordsTop = 0;\n        this.currentProgress = \"0%\";\n        if (!this.playState) {\n          $(\".control_icon\").click();\n        }\n      }\n    },\n    ButtonActive(id) {\n      this.listButtonActiveIndex = id;\n    },\n    DisActive() {\n      this.disActive = this.disActive ? false : true;\n    },\n    _getMusicType(id) {\n      if (this.thisMusicType != id) {\n        this.notPlay = [];\n        if (id == -1) {\n          if (this.myMusicList.length != 0) {\n            this.musicList = this.myMusicList;\n            this.thisMusicType = id;\n            this.thisMusicIndex = 0;\n            this.thisListPage = 1;\n            this._getInfo();\n            this.top = 0;\n            this.o = 0;\n            this.wordIndex = 0;\n            this.wordsTop = 0;\n            this.currentProgress = \"0%\";\n            if (!this.playState) {\n              $(\".control_icon\").click();\n            }\n          } else {\n            //自定义库没有歌曲 提示需要搜索才可以添加\n            this.MusicAlert(\"没有歌曲,需要自己添加\");\n          }\n        } else {\n          getHotMusic(id).then(res => {\n            this.musicList = res.data.playlist.tracks.splice(0, 200);\n            this.thisMusicType = id;\n            this.thisMusicIndex = 0;\n            this.thisListPage = 1;\n            this._getInfo();\n            this.top = 0;\n            this.o = 0;\n            this.wordIndex = 0;\n            this.wordsTop = 0;\n            this.currentProgress = \"0%\";\n            if (!this.playState) {\n              $(\".control_icon\").click();\n            }\n          });\n        }\n      }\n    },\n    _getInfo() {\n      getMusicUrl(this.musicList[this.thisMusicIndex].id).then(res => {\n        if (\n          res.data.data[0].url == null ||\n          res.data.data[0].url == \"\" ||\n          res.data.data[0].url == undefined\n        ) {\n          if (this.notPlay.length != this.musicList.length) {\n            let nextIndex = this.thisMusicIndex + 1;\n            if (this.notPlay.indexOf(this.thisMusicIndex) == -1) {\n              this.notPlay.push(this.thisMusicIndex);\n            }\n            this.MusicAlert(\n              `${this.musicList[this.thisMusicIndex].name}因为一些原因不能播放`\n            );\n            this.ListPlay(nextIndex); //寻找下一首歌  直到找到\n\n            //提示这首歌不能放\n          } else {\n            //遍历完没有找到\n            console.log(\"not\");\n            this.MusicAlert(\"此列表所有歌都不能播放\");\n          }\n        } else {\n          this.musicUrl = res.data.data[0].url.replace(\"http://\", \"https://\");\n          this.musicImg =\n            this.musicList[this.thisMusicIndex].al.picUrl.replace(\n              \"http://\",\n              \"https://\"\n            ) + \"?param=300y300\";\n          this.musicTitle = this.musicList[this.thisMusicIndex].name;\n          let name_arr = [];\n          this.musicList[this.thisMusicIndex].ar.forEach(i => {\n            name_arr.push(i.name);\n          });\n          this.musicName = name_arr.join(\"/\");\n          getWords(this.musicList[this.thisMusicIndex].id).then(res => {\n            if (!res.data.nolyric) {\n              let info = this.Cut(res.data.lrc.lyric);\n              this.musicWords = info.wordArr;\n              this.wordsTime = info.timeArr;\n            }\n          });\n          getHotTalk(this.musicList[this.thisMusicIndex].id).then(res => {\n            let count = 0;\n            this.hotTalkList = res.data.hotComments.splice(0, 3);\n            this.hotTalkList.forEach(e => {\n              count += e.content.length;\n              e.user.avatarUrl = e.user.avatarUrl + \"?param=50y50\";\n            });\n            if (count >= 200) {\n              this.hotTalkList = this.hotTalkList.slice(0, 2);\n            }\n          });\n        }\n      });\n    },\n    Ltrim(s) {\n      return s.replace(/(^\\s*)/g, \"\");\n    },\n    Rtrim(s) {\n      return s.replace(/(\\s*$)/g, \"\");\n    },\n    //歌词截取函数\n    Cut(str) {\n      let timeArr = [];\n      let wordArr = [];\n      timeArr = str.split(\"[\");\n      timeArr.splice(0, 1);\n      for (let i = 0; i < timeArr.length; i++) {\n        let cut = timeArr[i].split(\"]\");\n        let time = cut[0].split(\".\")[0].split(\":\");\n        timeArr[i] = Number.parseInt(time[0]) * 60 + Number.parseInt(time[1]);\n        timeArr[i] = isNaN(timeArr[i]) ? 0 : timeArr[i]; //处理NaN\n        wordArr[i] = this.Rtrim(this.Ltrim(cut[1]));\n      }\n      return { timeArr: timeArr, wordArr: wordArr };\n    },\n    Player() {\n      let self = this;\n      let player = $(\"#music\")[0];\n      let playerTimer = setInterval(timer, 1000);\n      $(\".control_icon\").click();\n      //定时器函数\n      $(\"body\").on(\"click\", () => {\n        player.play();\n        $(\"body\").unbind(\"click\");\n      });\n      function timer() {\n        self.currentProgress = `${(player.currentTime / player.duration) *\n          100}%`;\n        //接着这里写歌词滚动\n        if (player.currentTime >= self.wordsTime[self.o + 1]) {\n          self.top += Number.parseInt(\n            $(\".music_word\")\n              .eq(self.o)\n              .height() +\n              Number.parseInt(\n                $(\".music_word\")\n                  .eq(self.o)\n                  .css(\"marginTop\")\n              )\n          );\n          if (self.top >= $(\".music_words\").height() / 2 - 11) {\n            //开始滚动的高度\n            self.wordsTop += -Number.parseInt(\n              $(\".music_word\")\n                .eq(self.o)\n                .height() +\n                Number.parseInt(\n                  $(\".music_word\")\n                    .eq(self.o)\n                    .css(\"marginTop\")\n                )\n            );\n          }\n          self.wordIndex = self.o + 1;\n          self.o++;\n        }\n        if (player.currentTime >= player.duration) {\n          //切歌\n          if (self.musicList.length != 1) {\n            //只有一首歌  重复播放\n            if (self.musicState == 0) {\n              self.thisMusicIndex =\n                self.thisMusicIndex >= self.musicList.length - 1\n                  ? 0\n                  : self.thisMusicIndex + 1;\n              self._getInfo();\n            }\n          }\n          player.play();\n          self.top = 0;\n          self.o = 0;\n          self.wordIndex = 0;\n          self.wordsTop = 0;\n          self.currentProgress = \"0%\";\n        }\n      }\n      //进度条控制\n      $(\".progress\").on(\"mousedown\", ev => {\n        console.log();\n        let e = ev || event;\n        let pro =\n          (e.clientX - $(\".progress\").offset().left) / $(\".progress\").width();\n        clearInterval(playerTimer);\n        this.currentProgress = `${pro * 100}%`;\n        $(document).on(\"mousemove\", ev => {\n          let e = ev || event;\n          pro =\n            (e.clientX - $(\".progress\").offset().left) / $(\".progress\").width();\n          this.currentProgress = `${pro * 100}%`;\n        });\n        $(document).on(\"mouseup\", () => {\n          player.currentTime = player.duration * pro;\n          let c_arr = [...this.wordsTime];\n          c_arr.push(player.currentTime);\n          c_arr.sort((l, r) => {\n            return l - r;\n          });\n          let now_o = c_arr.indexOf(player.currentTime) - 1;\n          let diff_h = 0;\n          if (this.o < now_o) {\n            for (let i = this.o; i < now_o; i++) {\n              diff_h += -Number.parseInt(\n                $(\".music_word\")\n                  .eq(i)\n                  .height() +\n                  Number.parseInt(\n                    $(\".music_word\")\n                      .eq(i)\n                      .css(\"marginTop\")\n                  )\n              );\n            }\n          } else {\n            for (let i = now_o; i < this.o; i++) {\n              diff_h += Number.parseInt(\n                $(\".music_word\")\n                  .eq(i)\n                  .height() +\n                  Number.parseInt(\n                    $(\".music_word\")\n                      .eq(i)\n                      .css(\"marginTop\")\n                  )\n              );\n            }\n          }\n          this.wordsTop += diff_h;\n          self.wordIndex = this.o = now_o;\n          clearInterval(playerTimer);\n          playerTimer = setInterval(timer, 1000);\n          this.playState = true;\n          this.playIcon = this.pause;\n          if (player.currentTime >= player.duration) {\n            this.top = 0;\n            this.o = 0;\n            this.wordIndex = 0;\n            this.wordsTop = 0;\n            this.currentProgress = \"0%\";\n          }\n          player.play();\n          $(document).unbind(\"mousemove\");\n          $(document).unbind(\"mouseup\");\n        });\n      });\n      //播放暂停按钮控制\n      $(\".control_icon\").on(\"click\", () => {\n        if (this.playState) {\n          player.pause();\n          this.playState = false;\n          this.playIcon = this.play;\n          clearInterval(playerTimer);\n        } else {\n          player.play();\n          this.playState = true;\n          this.playIcon = this.pause;\n          clearInterval(playerTimer);\n          playerTimer = setInterval(timer, 1000);\n        }\n      });\n    },\n    Contorl() {\n      let player = $(\"#music\")[0];\n      player.currentTime = 100;\n    }\n  }\n};\n</script>\n<style scoped>\n@import url(\"./player.css\");\n@import url(\"./playermobile.css\");\n</style>\n"]}]}