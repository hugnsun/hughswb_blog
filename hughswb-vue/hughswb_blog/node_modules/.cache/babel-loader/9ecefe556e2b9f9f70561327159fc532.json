{"remainingRequest":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/babel-loader/lib/index.js!/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","dependencies":[{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","mtime":1670984980836},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/cache-loader/dist/cjs.js","mtime":1670984987973},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/babel-loader/lib/index.js","mtime":1670984988372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VTreeview/VTreeviewNode.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  disablePerNode: Boolean,\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (!this.disablePerNode && (this.parentIsDisabled && this.selectionType === 'leaf'))\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          disablePerNode: this.disablePerNode,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n"],"sourceRoot":""}]}