{"remainingRequest":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/babel-loader/lib/index.js!/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vuetify/lib/util/helpers.js","dependencies":[{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/vuetify/lib/util/helpers.js","mtime":499162500000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/blog-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/util/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { VNode, VNodeDirective } from 'vue/types'\nimport { VuetifyIcon } from 'vuetify/types/services/icons'\nimport { DataTableCompareFunction, SelectItemKey, ItemGroup } from 'vuetify/types'\n\nexport function createSimpleFunctional (\n  c: string,\n  el = 'div',\n  name?: string\n) {\n  return Vue.extend({\n    name: name || c.replace(/__/g, '-'),\n\n    functional: true,\n\n    props: {\n      tag: {\n        type: String,\n        default: el,\n      },\n    },\n\n    render (h, { data, props, children }): VNode {\n      data.staticClass = (`${c} ${data.staticClass || ''}`).trim()\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n\nexport type BindingConfig = Pick<VNodeDirective, 'arg' | 'modifiers' | 'value'>\nexport function directiveConfig (binding: BindingConfig, defaults = {}): VNodeDirective {\n  return {\n    ...defaults,\n    ...binding.modifiers,\n    value: binding.arg,\n    ...(binding.value || {}),\n  }\n}\n\nexport function addOnceEventListener (\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false\n): void {\n  const once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nlet passiveSupported = false\ntry {\n  if (typeof window !== 'undefined') {\n    const testListenerOpts = Object.defineProperty({}, 'passive', {\n      get: () => {\n        passiveSupported = true\n      },\n    })\n\n    window.addEventListener('testListener', testListenerOpts, testListenerOpts)\n    window.removeEventListener('testListener', testListenerOpts, testListenerOpts)\n  }\n} catch (e) { console.warn(e) } /* eslint-disable-line no-console */\nexport { passiveSupported }\n\nexport function addPassiveEventListener (\n  el: EventTarget,\n  event: string,\n  cb: EventHandlerNonNull | (() => void),\n  options: {}\n): void {\n  el.addEventListener(event, cb, passiveSupported ? options : false)\n}\n\nexport function getNestedValue (obj: any, path: (string | number)[], fallback?: any): any {\n  const last = path.length - 1\n\n  if (last < 0) return obj === undefined ? fallback : obj\n\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback\n    }\n    obj = obj[path[i]]\n  }\n\n  if (obj == null) return fallback\n\n  return obj[path[last]] === undefined ? fallback : obj[path[last]]\n}\n\nexport function deepEqual (a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (\n    a instanceof Date &&\n    b instanceof Date &&\n    a.getTime() !== b.getTime()\n  ) {\n    // If the values are Date, compare them as timestamps\n    return false\n  }\n\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false\n  }\n\n  const props = Object.keys(a)\n\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\nexport function getObjectValueByPath (obj: any, path: string, fallback?: any): any {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback\n  if (obj[path] !== undefined) return obj[path]\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback)\n}\n\nexport function getPropertyFromItem (\n  item: object,\n  property: SelectItemKey,\n  fallback?: any\n): any {\n  if (property == null) return item === undefined ? fallback : item\n\n  if (item !== Object(item)) return fallback === undefined ? item : fallback\n\n  if (typeof property === 'string') return getObjectValueByPath(item, property, fallback)\n\n  if (Array.isArray(property)) return getNestedValue(item, property, fallback)\n\n  if (typeof property !== 'function') return fallback\n\n  const value = property(item, fallback)\n\n  return typeof value === 'undefined' ? fallback : value\n}\n\nexport function createRange (length: number): number[] {\n  return Array.from({ length }, (v, k) => k)\n}\n\nexport function getZIndex (el?: Element | null): number {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\n\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\n\n  if (!index) return getZIndex(el.parentNode as Element)\n  return index\n}\n\nconst tagsToReplace = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n} as any\n\nexport function escapeHTML (str: string): string {\n  return str.replace(/[&<>]/g, tag => tagsToReplace[tag] || tag)\n}\n\nexport function filterObjectOnKeys<T, K extends keyof T> (obj: T, keys: K[]): { [N in K]: T[N] } {\n  const filtered = {} as { [N in K]: T[N] }\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    if (typeof obj[key] !== 'undefined') {\n      filtered[key] = obj[key]\n    }\n  }\n\n  return filtered\n}\n\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n\nexport function kebabCase (str: string): string {\n  return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\nexport function isObject (obj: any): obj is object {\n  return obj !== null && typeof obj === 'object'\n}\n\n// KeyboardEvent.keyCode aliases\nexport const keyCodes = Object.freeze({\n  enter: 13,\n  tab: 9,\n  delete: 46,\n  esc: 27,\n  space: 32,\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  end: 35,\n  home: 36,\n  del: 46,\n  backspace: 8,\n  insert: 45,\n  pageup: 33,\n  pagedown: 34,\n  shift: 16,\n})\n\n/**\n * This remaps internal names like '$cancel' or '$vuetify.icons.cancel'\n * to the current name or component for that icon.\n */\nexport function remapInternalIcon (vm: Vue, iconName: string): VuetifyIcon {\n  // Look for custom component in the configuration\n  const component = vm.$vuetify.icons.component\n\n  // Look for overrides\n  if (iconName.startsWith('$')) {\n    // Get the target icon name\n    const iconPath = `$vuetify.icons.values.${iconName.split('$').pop()!.split('.').pop()}`\n\n    // Now look up icon indirection name,\n    // e.g. '$vuetify.icons.values.cancel'\n    const override = getObjectValueByPath(vm, iconPath, iconName)\n\n    if (typeof override === 'string') iconName = override\n    else return override\n  }\n\n  if (component == null) {\n    return iconName\n  }\n\n  return {\n    component,\n    props: {\n      icon: iconName,\n    },\n  }\n}\n\nexport function keys<O> (o: O) {\n  return Object.keys(o) as (keyof O)[]\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nconst camelizeRE = /-(\\w)/g\nexport const camelize = (str: string): string => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n}\n\n/**\n * Returns the set difference of B and A, i.e. the set of elements in B but not in A\n */\nexport function arrayDiff (a: any[], b: any[]): any[] {\n  const diff: any[] = []\n  for (let i = 0; i < b.length; i++) {\n    if (a.indexOf(b[i]) < 0) diff.push(b[i])\n  }\n  return diff\n}\n\n/**\n * Makes the first character of a string uppercase\n */\nexport function upperFirst (str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function groupItems<T extends any = any> (\n  items: T[],\n  groupBy: string[],\n  groupDesc: boolean[]\n): ItemGroup<T>[] {\n  const key = groupBy[0]\n  const groups: ItemGroup<T>[] = []\n  let current\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const val = getObjectValueByPath(item, key, null)\n    if (current !== val) {\n      current = val\n      groups.push({\n        name: val ?? '',\n        items: [],\n      })\n    }\n    groups[groups.length - 1].items.push(item)\n  }\n  return groups\n}\n\nexport function wrapInArray<T> (v: T | T[] | null | undefined): T[] { return v != null ? Array.isArray(v) ? v : [v] : [] }\n\nexport function sortItems<T extends any = any> (\n  items: T[],\n  sortBy: string[],\n  sortDesc: boolean[],\n  locale: string,\n  customSorters?: Record<string, DataTableCompareFunction<T>>\n): T[] {\n  if (sortBy === null || !sortBy.length) return items\n  const stringCollator = new Intl.Collator(locale, { sensitivity: 'accent', usage: 'sort' })\n\n  return items.sort((a, b) => {\n    for (let i = 0; i < sortBy.length; i++) {\n      const sortKey = sortBy[i]\n\n      let sortA = getObjectValueByPath(a, sortKey)\n      let sortB = getObjectValueByPath(b, sortKey)\n\n      if (sortDesc[i]) {\n        [sortA, sortB] = [sortB, sortA]\n      }\n\n      if (customSorters && customSorters[sortKey]) {\n        const customResult = customSorters[sortKey](sortA, sortB)\n\n        if (!customResult) continue\n\n        return customResult\n      }\n\n      // Check if both cannot be evaluated\n      if (sortA === null && sortB === null) {\n        continue\n      }\n\n      // Dates should be compared numerically\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime()\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => (s || '').toString().toLocaleLowerCase())\n\n      if (sortA !== sortB) {\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB)\n        return stringCollator.compare(sortA, sortB)\n      }\n    }\n\n    return 0\n  })\n}\n\nexport function defaultFilter (value: any, search: string | null, item: any) {\n  return value != null &&\n    search != null &&\n    typeof value !== 'boolean' &&\n    value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1\n}\n\nexport function searchItems<T extends any = any> (items: T[], search: string): T[] {\n  if (!search) return items\n  search = search.toString().toLowerCase()\n  if (search.trim() === '') return items\n\n  return items.filter((item: any) => Object.keys(item).some(key => defaultFilter(getObjectValueByPath(item, key), search, item)))\n}\n\n/**\n * Returns:\n *  - 'normal' for old style slots - `<template slot=\"default\">`\n *  - 'scoped' for old style scoped slots (`<template slot=\"default\" slot-scope=\"data\">`) or bound v-slot (`#default=\"data\"`)\n *  - 'v-slot' for unbound v-slot (`#default`) - only if the third param is true, otherwise counts as scoped\n */\nexport function getSlotType<T extends boolean = false> (vm: Vue, name: string, split?: T): (T extends true ? 'v-slot' : never) | 'normal' | 'scoped' | void {\n  if (vm.$slots.hasOwnProperty(name) && vm.$scopedSlots.hasOwnProperty(name) && (vm.$scopedSlots[name] as any).name) {\n    return split ? 'v-slot' as any : 'scoped'\n  }\n  if (vm.$slots.hasOwnProperty(name)) return 'normal'\n  if (vm.$scopedSlots.hasOwnProperty(name)) return 'scoped'\n}\n\nexport function debounce (fn: Function, delay: number) {\n  let timeoutId = 0 as any\n  return (...args: any[]) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn(...args), delay)\n  }\n}\n\nexport function throttle<T extends (...args: any[]) => any> (fn: T, limit: number) {\n  let throttling = false\n  return (...args: Parameters<T>): void | ReturnType<T> => {\n    if (!throttling) {\n      throttling = true\n      setTimeout(() => throttling = false, limit)\n      return fn(...args)\n    }\n  }\n}\n\nexport function getPrefixedScopedSlots (prefix: string, scopedSlots: any) {\n  return Object.keys(scopedSlots).filter(k => k.startsWith(prefix)).reduce((obj: any, k: string) => {\n    obj[k.replace(prefix, '')] = scopedSlots[k]\n    return obj\n  }, {})\n}\n\nexport function getSlot (vm: Vue, name = 'default', data?: object | (() => object), optional = false) {\n  if (vm.$scopedSlots.hasOwnProperty(name)) {\n    return vm.$scopedSlots[name]!(data instanceof Function ? data() : data)\n  } else if (vm.$slots.hasOwnProperty(name) && (!data || optional)) {\n    return vm.$slots[name]\n  }\n  return undefined\n}\n\nexport function clamp (value: number, min = 0, max = 1) {\n  return Math.max(min, Math.min(max, value))\n}\n\nexport function padEnd (str: string, length: number, char = '0') {\n  return str + char.repeat(Math.max(0, length - str.length))\n}\n\nexport function chunk (str: string, size = 1) {\n  const chunked: string[] = []\n  let index = 0\n  while (index < str.length) {\n    chunked.push(str.substr(index, size))\n    index += size\n  }\n  return chunked\n}\n\nexport function humanReadableFileSize (bytes: number, binary = false): string {\n  const base = binary ? 1024 : 1000\n  if (bytes < base) {\n    return `${bytes} B`\n  }\n\n  const prefix = binary ? ['Ki', 'Mi', 'Gi'] : ['k', 'M', 'G']\n  let unit = -1\n  while (Math.abs(bytes) >= base && unit < prefix.length - 1) {\n    bytes /= base\n    ++unit\n  }\n  return `${bytes.toFixed(1)} ${prefix[unit]}B`\n}\n\nexport function camelizeObjectKeys (obj: Record<string, any> | null | undefined) {\n  if (!obj) return {}\n\n  return Object.keys(obj).reduce((o: any, key: string) => {\n    o[camelize(key)] = obj[key]\n    return o\n  }, {})\n}\n\nexport function mergeDeep (\n  source: Dictionary<any> = {},\n  target: Dictionary<any> = {}\n) {\n  for (const key in target) {\n    const sourceProperty = source[key]\n    const targetProperty = target[key]\n\n    // Only continue deep merging if\n    // both properties are objects\n    if (\n      isObject(sourceProperty) &&\n      isObject(targetProperty)\n    ) {\n      source[key] = mergeDeep(sourceProperty, targetProperty)\n\n      continue\n    }\n\n    source[key] = targetProperty\n  }\n\n  return source\n}\n\nexport function fillArray<T> (length: number, obj: T) {\n  return Array(length).fill(obj)\n}\n\n/**  Polyfill for Event.prototype.composedPath */\nexport function composedPath (e: Event): EventTarget[] {\n  if (e.composedPath) return e.composedPath()\n\n  const path = []\n  let el = e.target as Element\n\n  while (el) {\n    path.push(el)\n\n    if (el.tagName === 'HTML') {\n      path.push(document)\n      path.push(window)\n\n      return path\n    }\n\n    el = el.parentElement!\n  }\n  return path\n}\n"],"sourceRoot":""}]}