{"remainingRequest":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/thread-loader/dist/cjs.js!/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/babel-loader/lib/index.js!/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/vuetify/lib/components/VTabs/VTabs.js","dependencies":[{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/vuetify/lib/components/VTabs/VTabs.js","mtime":1670984980828},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/cache-loader/dist/cjs.js","mtime":1670984987973},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/thread-loader/dist/cjs.js","mtime":1670984981617},{"path":"/Users/sunwenbo/Downloads/博客/new-blog-master/blog-vue/blog/node_modules/babel-loader/lib/index.js","mtime":1670984988372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}